#name "io.cool"
#2 TYPEID The
#2 TYPEID IO
#2 CLASS
#2 OBJECTID is
#2 OBJECTID predefined
#2 OBJECTID and
#2 OBJECTID has
#2 INT_CONST 4
#2 OBJECTID methods
#4 OBJECTID out
#4 OBJECTID string
#4 OBJECTID s
#4 TYPEID String
#4 TYPEID SELF
#4 TYPEID TYPE
#5 OBJECTID out
#5 OBJECTID int
#5 OBJECTID i
#5 TYPEID Int
#5 TYPEID SELF
#5 TYPEID TYPE
#6 OBJECTID in
#6 OBJECTID string
#6 TYPEID String
#7 OBJECTID in
#7 OBJECTID int
#7 TYPEID Int
#9 TYPEID The
#9 OBJECTID out
#9 OBJECTID operations
#9 OBJECTID print
#9 OBJECTID their
#9 OBJECTID argument
#9 OBJECTID to
#9 OBJECTID the
#9 OBJECTID terminal
#9 TYPEID The
#10 OBJECTID in
#10 OBJECTID string
#10 OBJECTID method
#10 OBJECTID reads
#10 OBJECTID an
#10 OBJECTID entire
#10 OBJECTID line
#10 OBJECTID from
#10 OBJECTID the
#10 OBJECTID terminal
#10 OBJECTID and
#10 OBJECTID returns
#10 OBJECTID a
#11 OBJECTID string
#11 NOT
#11 OBJECTID containing
#11 OBJECTID the
#11 NEW
#11 OBJECTID line
#11 TYPEID The
#11 OBJECTID in
#11 OBJECTID int
#11 OBJECTID method
#11 OBJECTID also
#11 OBJECTID reads
#12 OBJECTID an
#12 OBJECTID entire
#12 OBJECTID line
#12 OBJECTID from
#12 OBJECTID the
#12 OBJECTID terminal
#12 OBJECTID and
#12 OBJECTID returns
#12 OBJECTID the
#12 OBJECTID integer
#13 OBJECTID corresponding
#13 OBJECTID to
#13 OBJECTID the
#13 OBJECTID first
#13 OBJECTID non
#13 OBJECTID blank
#13 OBJECTID word
#13 OBJECTID on
#13 OBJECTID the
#13 OBJECTID line
#13 IF
#13 OBJECTID that
#14 OBJECTID word
#14 OBJECTID is
#14 NOT
#14 OBJECTID an
#14 OBJECTID integer
#14 OBJECTID it
#14 OBJECTID returns
#14 INT_CONST 0
#17 TYPEID Because
#17 OBJECTID our
#17 OBJECTID language
#17 OBJECTID is
#17 OBJECTID object
#17 OBJECTID oriented
#17 OBJECTID we
#17 OBJECTID need
#17 OBJECTID an
#17 OBJECTID object
#17 OF
#17 OBJECTID type
#18 TYPEID IO
#18 IN
#18 OBJECTID order
#18 OBJECTID to
#18 OBJECTID call
#18 OBJECTID any
#18 OF
#18 OBJECTID these
#18 OBJECTID methods
#20 TYPEID There
#20 OBJECTID are
#20 OBJECTID basically
#20 OBJECTID two
#20 OBJECTID ways
#20 OF
#20 OBJECTID getting
#20 OBJECTID access
#20 OBJECTID to
#20 TYPEID IO
#20 IN
#20 OBJECTID a
#20 CLASS
#20 TYPEID C
#22 INT_CONST 1
#22 TYPEID Define
#22 TYPEID C
#22 OBJECTID to
#22 TYPEID Inherit
#22 OBJECTID from
#22 TYPEID IO
#22 TYPEID This
#22 OBJECTID way
#22 OBJECTID the
#22 TYPEID IO
#22 OBJECTID methods
#22 OBJECTID become
#23 OBJECTID methods
#23 OF
#23 TYPEID C
#23 OBJECTID and
#23 OBJECTID they
#23 OBJECTID can
#23 OBJECTID be
#23 OBJECTID called
#23 OBJECTID using
#23 OBJECTID the
#23 OBJECTID abbreviated
#24 OBJECTID dispatch
#24 OBJECTID i
#24 OBJECTID e
#26 CLASS
#26 TYPEID C
#26 INHERITS
#26 TYPEID IO
#26 OBJECTID is
#28 OBJECTID out
#28 OBJECTID string
#28 STR_CONST Hello world
#30 OBJECTID end
#32 INT_CONST 2
#32 IF
#32 OBJECTID your
#32 CLASS
#32 TYPEID C
#32 OBJECTID does
#32 NOT
#32 OBJECTID directly
#32 OBJECTID or
#32 OBJECTID indirectly
#32 OBJECTID inherit
#32 OBJECTID from
#33 TYPEID IO
#33 OBJECTID the
#33 OBJECTID best
#33 OBJECTID way
#33 OBJECTID to
#33 OBJECTID access
#33 TYPEID IO
#33 OBJECTID is
#33 OBJECTID through
#33 OBJECTID an
#33 OBJECTID initialized
#34 OBJECTID attribute
#34 OF
#34 OBJECTID type
#34 TYPEID IO
#36 CLASS
#36 TYPEID C
#36 INHERITS
#36 TYPEID Foo
#36 OBJECTID is
#37 OBJECTID io
#37 TYPEID IO
#37 ASSIGN
#37 NEW
#37 TYPEID IO
#39 OBJECTID io
#39 OBJECTID out
#39 OBJECTID string
#39 STR_CONST Hello world
#41 OBJECTID end
#43 TYPEID Approach
#43 INT_CONST 1
#43 OBJECTID is
#43 OBJECTID most
#43 OBJECTID often
#43 OBJECTID used
#43 IN
#43 OBJECTID particular
#43 OBJECTID when
#43 OBJECTID you
#43 OBJECTID need
#43 TYPEID IO
#44 OBJECTID functions
#44 IN
#44 OBJECTID the
#44 TYPEID Main
#44 CLASS
#49 CLASS
#49 TYPEID A
#51 LET
#51 OBJECTID s
#51 OBJECTID assume
#51 OBJECTID that
#51 OBJECTID we
#51 OBJECTID don
#51 OBJECTID t
#51 OBJECTID want
#51 TYPEID A
#51 OBJECTID to
#51 NOT
#51 OBJECTID inherit
#51 OBJECTID from
#51 TYPEID IO
#53 OBJECTID io
#53 TYPEID IO
#53 ASSIGN
#53 NEW
#53 TYPEID IO
#55 OBJECTID out
#55 OBJECTID a
#55 TYPEID Object
#55 OBJECTID io
#55 OBJECTID out
#55 OBJECTID string
#55 STR_CONST A: Hello world
#60 CLASS
#60 TYPEID B
#60 INHERITS
#60 TYPEID A
#62 TYPEID B
#62 OBJECTID does
#62 NOT
#62 OBJECTID have
#62 OBJECTID to
#62 OBJECTID an
#62 OBJECTID extra
#62 OBJECTID attribute
#62 OBJECTID since
#62 OBJECTID it
#62 INHERITS
#62 OBJECTID io
#62 OBJECTID from
#62 TYPEID A
#64 OBJECTID out
#64 OBJECTID b
#64 TYPEID Object
#64 OBJECTID io
#64 OBJECTID out
#64 OBJECTID string
#64 STR_CONST B: Hello world
#69 CLASS
#69 TYPEID C
#69 INHERITS
#69 TYPEID IO
#71 TYPEID Now
#71 OBJECTID the
#71 TYPEID IO
#71 OBJECTID methods
#71 OBJECTID are
#71 OBJECTID part
#71 OF
#71 TYPEID C
#73 OBJECTID out
#73 OBJECTID c
#73 TYPEID Object
#73 OBJECTID out
#73 OBJECTID string
#73 STR_CONST C: Hello world
#75 TYPEID Note
#75 OBJECTID that
#75 OBJECTID out
#75 OBJECTID string
#75 OBJECTID is
#75 OBJECTID just
#75 OBJECTID a
#75 OBJECTID shorthand
#75 OBJECTID for
#75 OBJECTID self
#75 OBJECTID out
#75 OBJECTID string
#80 CLASS
#80 TYPEID D
#80 INHERITS
#80 TYPEID C
#82 INHERITS
#82 TYPEID IO
#82 OBJECTID methods
#82 OBJECTID from
#82 TYPEID C
#84 OBJECTID out
#84 OBJECTID d
#84 TYPEID Object
#84 OBJECTID out
#84 OBJECTID string
#84 STR_CONST D: Hello world
#89 CLASS
#89 TYPEID Main
#89 INHERITS
#89 TYPEID IO
#91 TYPEID Same
#91 CASE
#91 OBJECTID as
#91 CLASS
#91 TYPEID C
#93 OBJECTID main
#93 TYPEID Object
#95 NEW
#95 TYPEID A
#95 OBJECTID out
#95 OBJECTID a
#96 NEW
#96 TYPEID B
#96 OBJECTID out
#96 OBJECTID b
#97 NEW
#97 TYPEID C
#97 OBJECTID out
#97 OBJECTID c
#98 NEW
#98 TYPEID D
#98 OBJECTID out
#98 OBJECTID d
#99 OBJECTID out
#99 OBJECTID string
#99 STR_CONST Done.